name: Build Windows

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: self-hosted
    env:
      VSCODE_SKIP_NODE_VERSION_CHECK: "1"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'ainative-studio/package-lock.json'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Configure Windows for build
      run: |
        # Add exclusion for build directory to Windows Defender
        try {
          Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE" -ErrorAction SilentlyContinue
          Write-Output "Added Windows Defender exclusion for workspace"
        }
        catch {
          Write-Output "Could not add Windows Defender exclusion (may require admin rights)"
        }
        # Set npm to use shorter paths to avoid Windows path length limits
        npm config set cache "C:\npm-cache" --global
        npm config set prefix "C:\npm-prefix" --global
      shell: powershell
    
    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('ainative-studio/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Cache TypeScript build
      uses: actions/cache@v4
      with:
        path: |
          ainative-studio/out
          ainative-studio/out-build
        key: ${{ runner.os }}-typescript-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-typescript-
    
    - name: Install Node.js dependencies
      working-directory: ainative-studio
      run: |
        # Clear npm cache and remove node_modules if it exists to avoid file locking issues
        npm cache clean --force
        if (Test-Path "node_modules") { Remove-Item -Recurse -Force "node_modules" -ErrorAction SilentlyContinue }
        
        # Retry npm ci up to 3 times to handle Windows file locking
        $attempt = 1
        $maxAttempts = 3
        do {
          Write-Output "Attempt $attempt of $maxAttempts"
          try {
            # Install dependencies while ignoring the preinstall script
            npm ci --ignore-scripts
            
            # Install build dependencies first
            cd build
            npm ci --silent
            cd ..
            
            # Install extension dependencies manually to avoid git config issues
            cd extensions
            npm ci --silent
            cd ..
            
            # Install critical extension dependencies individually
            $criticalExtensions = @("markdown-math", "markdown-language-features", "typescript-language-features", "html-language-features", "json-language-features")
            foreach ($ext in $criticalExtensions) {
              if (Test-Path "extensions/$ext/package.json") {
                Write-Output "Installing dependencies for $ext..."
                cd "extensions/$ext"
                try {
                  npm install --silent --no-audit 2>$null
                }
                catch {
                  Write-Output "$ext install failed, continuing..."
                }
                cd ../..
              }
            }
            break
          }
          catch {
            if ($attempt -eq $maxAttempts) {
              throw "npm ci failed after $maxAttempts attempts"
            }
            Write-Output "npm ci failed, retrying in 10 seconds..."
            Start-Sleep -Seconds 10
            $attempt++
          }
        } while ($attempt -le $maxAttempts)
      shell: powershell
    
    - name: Build React components
      working-directory: ainative-studio
      run: |
        npm run buildreact
      shell: powershell
    
    - name: Compile TypeScript
      working-directory: ainative-studio
      run: |
        # Use increased memory for TypeScript compilation
        $env:NODE_OPTIONS = "--max-old-space-size=16384"
        npm run compile
      shell: powershell
    
    - name: Run tests
      working-directory: ainative-studio
      run: |
        # Run Node tests with increased memory
        $env:NODE_OPTIONS = "--max-old-space-size=8192"
        npm run test-node
        # Run browser tests
        npm run test-browser
      shell: powershell
    
    - name: Build Windows x64 package
      working-directory: ainative-studio
      run: |
        # Build with maximum memory allocation
        $env:NODE_OPTIONS = "--max-old-space-size=16384"
        npm run gulp vscode-win32-x64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: powershell
    
    - name: Create ZIP archive
      run: |
        cd ../VSCode-win32-x64
        Compress-Archive -Path * -DestinationPath ../ainative-studio-win32-x64.zip
      shell: powershell
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ainative-studio-win32-x64
        path: ../ainative-studio-win32-x64.zip
        retention-days: 30
    
    - name: Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: ../ainative-studio-win32-x64.zip
        draft: false
        prerelease: contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
